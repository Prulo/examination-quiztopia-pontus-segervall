{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "RegisterUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-dev-registerUser"
      }
    },
    "LoginUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-dev-loginUser"
      }
    },
    "CreateQuizLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
      }
    },
    "GetAllQuizzesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzes"
      }
    },
    "DeleteQuizzesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-dev-DeleteQuizzes"
      }
    },
    "RegisterUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
          "S3Key": "serverless/quiztopia/dev/1727945193935-2024-10-03T08:46:33.935Z/quiztopia.zip"
        },
        "Handler": "RegisterUser.registerUser",
        "Runtime": "nodejs20.x",
        "FunctionName": "quiztopia-dev-registerUser",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "dog",
            "DYNAMODB_TABLE_QUIZZES": "quizzes",
            "DYNAMODB_TABLE_USERS": "users"
          }
        },
        "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
      },
      "DependsOn": [
        "RegisterUserLogGroup"
      ]
    },
    "LoginUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
          "S3Key": "serverless/quiztopia/dev/1727945193935-2024-10-03T08:46:33.935Z/quiztopia.zip"
        },
        "Handler": "LoginUser.loginUser",
        "Runtime": "nodejs20.x",
        "FunctionName": "quiztopia-dev-loginUser",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "dog",
            "DYNAMODB_TABLE_QUIZZES": "quizzes",
            "DYNAMODB_TABLE_USERS": "users"
          }
        },
        "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
      },
      "DependsOn": [
        "LoginUserLogGroup"
      ]
    },
    "CreateQuizLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
          "S3Key": "serverless/quiztopia/dev/1727945193935-2024-10-03T08:46:33.935Z/quiztopia.zip"
        },
        "Handler": "CreateQuiz.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "quiztopia-dev-createQuiz",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "dog",
            "DYNAMODB_TABLE_QUIZZES": "quizzes",
            "DYNAMODB_TABLE_USERS": "users"
          }
        },
        "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
      },
      "DependsOn": [
        "CreateQuizLogGroup"
      ]
    },
    "GetAllQuizzesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
          "S3Key": "serverless/quiztopia/dev/1727945193935-2024-10-03T08:46:33.935Z/quiztopia.zip"
        },
        "Handler": "GetAllQuizzes.getAllQuizzes",
        "Runtime": "nodejs20.x",
        "FunctionName": "quiztopia-dev-getAllQuizzes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "dog",
            "DYNAMODB_TABLE_QUIZZES": "quizzes",
            "DYNAMODB_TABLE_USERS": "users"
          }
        },
        "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
      },
      "DependsOn": [
        "GetAllQuizzesLogGroup"
      ]
    },
    "DeleteQuizzesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
          "S3Key": "serverless/quiztopia/dev/1727945193935-2024-10-03T08:46:33.935Z/quiztopia.zip"
        },
        "Handler": "DeleteQuizzes.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "quiztopia-dev-DeleteQuizzes",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "JWT_SECRET": "dog",
            "DYNAMODB_TABLE_QUIZZES": "quizzes",
            "DYNAMODB_TABLE_USERS": "users"
          }
        },
        "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
      },
      "DependsOn": [
        "DeleteQuizzesLogGroup"
      ]
    },
    "RegisterUserLambdaVersiontVHBcixftlJOtkFlBO6xI7jGsagLgklks8WgnZTGH8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RegisterUserLambdaFunction"
        },
        "CodeSha256": "oI2Y9h6uJg1vp64Xbhh5E9UmqhYXjqFbpcCkd/dMIXE="
      }
    },
    "LoginUserLambdaVersion8lOudL93v571vkQeL2WtmR9ZOjlh32bELcfwxXuY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LoginUserLambdaFunction"
        },
        "CodeSha256": "oI2Y9h6uJg1vp64Xbhh5E9UmqhYXjqFbpcCkd/dMIXE="
      }
    },
    "CreateQuizLambdaVersionfRLkyDPoXOIoWrCTxZZZSiDurP0Dejj6YEkWaUn9Y": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateQuizLambdaFunction"
        },
        "CodeSha256": "oI2Y9h6uJg1vp64Xbhh5E9UmqhYXjqFbpcCkd/dMIXE="
      }
    },
    "GetAllQuizzesLambdaVersionmA1mVJ6Y3cR638aiSWcZ3Kts7JzryS20pGQwT2fxc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllQuizzesLambdaFunction"
        },
        "CodeSha256": "oI2Y9h6uJg1vp64Xbhh5E9UmqhYXjqFbpcCkd/dMIXE="
      }
    },
    "DeleteQuizzesLambdaVersionoX9x0iBJYwZWvdWikhKqQb5sc81IhEnIl5mT10AZwfo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteQuizzesLambdaFunction"
        },
        "CodeSha256": "oI2Y9h6uJg1vp64Xbhh5E9UmqhYXjqFbpcCkd/dMIXE="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-quiztopia",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceRegister": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "register",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceLogin": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "login",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceQuizzes": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "quizzes",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceQuizzesQuizidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceQuizzes"
        },
        "PathPart": "{quizId}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodRegisterPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRegister"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RegisterUserLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "RegisterUserLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodLoginPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceLogin"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LoginUserLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "LoginUserLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuizzesPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuizzes"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateQuizLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuizzesGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuizzes"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetAllQuizzesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetAllQuizzesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuizzesQuizidVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuizzesQuizidVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteQuizzesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteQuizzesLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1727945191549": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodRegisterPost",
        "ApiGatewayMethodLoginPost",
        "ApiGatewayMethodQuizzesPost",
        "ApiGatewayMethodQuizzesGet",
        "ApiGatewayMethodQuizzesQuizidVarDelete"
      ]
    },
    "RegisterUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RegisterUserLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "LoginUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LoginUserLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateQuizLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateQuizLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetAllQuizzesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetAllQuizzesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteQuizzesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteQuizzesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "QuizzesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "quizzes",
        "AttributeDefinitions": [
          {
            "AttributeName": "quizId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "quizId",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "UsersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "users",
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
      "Export": {
        "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
      }
    },
    "RegisterUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RegisterUserLambdaVersiontVHBcixftlJOtkFlBO6xI7jGsagLgklks8WgnZTGH8"
      },
      "Export": {
        "Name": "sls-quiztopia-dev-RegisterUserLambdaFunctionQualifiedArn"
      }
    },
    "LoginUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LoginUserLambdaVersion8lOudL93v571vkQeL2WtmR9ZOjlh32bELcfwxXuY"
      },
      "Export": {
        "Name": "sls-quiztopia-dev-LoginUserLambdaFunctionQualifiedArn"
      }
    },
    "CreateQuizLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateQuizLambdaVersionfRLkyDPoXOIoWrCTxZZZSiDurP0Dejj6YEkWaUn9Y"
      },
      "Export": {
        "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
      }
    },
    "GetAllQuizzesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetAllQuizzesLambdaVersionmA1mVJ6Y3cR638aiSWcZ3Kts7JzryS20pGQwT2fxc"
      },
      "Export": {
        "Name": "sls-quiztopia-dev-GetAllQuizzesLambdaFunctionQualifiedArn"
      }
    },
    "DeleteQuizzesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteQuizzesLambdaVersionoX9x0iBJYwZWvdWikhKqQb5sc81IhEnIl5mT10AZwfo"
      },
      "Export": {
        "Name": "sls-quiztopia-dev-DeleteQuizzesLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-quiztopia-dev-ServiceEndpoint"
      }
    }
  }
}