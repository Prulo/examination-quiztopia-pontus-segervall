{
  "service": {
    "service": "quiztopia",
    "serviceObject": {
      "name": "quiztopia"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "eu-north-1",
      "profile": "default",
      "iam": {
        "role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
      },
      "environment": {
        "JWT_SECRET": "dog",
        "DYNAMODB_TABLE_QUIZZES": "quizzes",
        "DYNAMODB_TABLE_USERS": "users"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "RegisterUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-registerUser"
            }
          },
          "LoginUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-loginUser"
            }
          },
          "CreateQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
            }
          },
          "JwtAuthorizerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-dev-jwtAuthorizer"
            }
          },
          "RegisterUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                "S3Key": "serverless/quiztopia/dev/1727780717252-2024-10-01T11:05:17.252Z/quiztopia.zip"
              },
              "Handler": "RegisterUser.registerUser",
              "Runtime": "nodejs20.x",
              "FunctionName": "quiztopia-dev-registerUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "dog",
                  "DYNAMODB_TABLE_QUIZZES": "quizzes",
                  "DYNAMODB_TABLE_USERS": "users"
                }
              },
              "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
            },
            "DependsOn": [
              "RegisterUserLogGroup"
            ]
          },
          "LoginUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                "S3Key": "serverless/quiztopia/dev/1727780717252-2024-10-01T11:05:17.252Z/quiztopia.zip"
              },
              "Handler": "LoginUser.loginUser",
              "Runtime": "nodejs20.x",
              "FunctionName": "quiztopia-dev-loginUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "dog",
                  "DYNAMODB_TABLE_QUIZZES": "quizzes",
                  "DYNAMODB_TABLE_USERS": "users"
                }
              },
              "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
            },
            "DependsOn": [
              "LoginUserLogGroup"
            ]
          },
          "CreateQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                "S3Key": "serverless/quiztopia/dev/1727780717252-2024-10-01T11:05:17.252Z/quiztopia.zip"
              },
              "Handler": "CreateQuiz.createQuiz",
              "Runtime": "nodejs20.x",
              "FunctionName": "quiztopia-dev-createQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "dog",
                  "DYNAMODB_TABLE_QUIZZES": "quizzes",
                  "DYNAMODB_TABLE_USERS": "users"
                }
              },
              "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
            },
            "DependsOn": [
              "CreateQuizLogGroup"
            ]
          },
          "JwtAuthorizerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                "S3Key": "serverless/quiztopia/dev/1727780717252-2024-10-01T11:05:17.252Z/quiztopia.zip"
              },
              "Handler": "JwtAuthorizer.jwtAuthorizer",
              "Runtime": "nodejs20.x",
              "FunctionName": "quiztopia-dev-jwtAuthorizer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "dog",
                  "DYNAMODB_TABLE_QUIZZES": "quizzes",
                  "DYNAMODB_TABLE_USERS": "users"
                }
              },
              "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
            },
            "DependsOn": [
              "JwtAuthorizerLogGroup"
            ]
          },
          "RegisterUserLambdaVersioncFsOipNbEtDsRGZF1IT3tFjJ6pQGpzbMhFQC1pxLxM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegisterUserLambdaFunction"
              },
              "CodeSha256": "f0paJjUnRvm4X4vL9HXL99KWZQ3VufZ+7+pFuHuUapU="
            }
          },
          "LoginUserLambdaVersionspnLcFEnBOex7SsUnSKtKeCcAB8s1TKfG8J0wWVko": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginUserLambdaFunction"
              },
              "CodeSha256": "f0paJjUnRvm4X4vL9HXL99KWZQ3VufZ+7+pFuHuUapU="
            }
          },
          "CreateQuizLambdaVersionA4LbGeAyGQ56MQIyClK1Osc2AGbisolYYkQgU1tFSk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateQuizLambdaFunction"
              },
              "CodeSha256": "f0paJjUnRvm4X4vL9HXL99KWZQ3VufZ+7+pFuHuUapU="
            }
          },
          "JwtAuthorizerLambdaVersionRMOv7qQbStOHIc184BCUbyIU4nU8FncVa1beggtRtnk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "JwtAuthorizerLambdaFunction"
              },
              "CodeSha256": "f0paJjUnRvm4X4vL9HXL99KWZQ3VufZ+7+pFuHuUapU="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-quiztopia",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceRegister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "register",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceQuizzes": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "quizzes",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodRegisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRegister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RegisterUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RegisterUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodQuizzesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceQuizzes"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizerApiGatewayAuthorizer"
            ]
          },
          "JwtAuthorizerApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "jwtAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "JwtAuthorizerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1727780714583": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodRegisterPost",
              "ApiGatewayMethodLoginPost",
              "ApiGatewayMethodQuizzesPost"
            ]
          },
          "RegisterUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegisterUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateQuizLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "JwtAuthorizerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "JwtAuthorizerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "QuizzesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "quizzes",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "users",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
            "Export": {
              "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
            }
          },
          "RegisterUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegisterUserLambdaVersioncFsOipNbEtDsRGZF1IT3tFjJ6pQGpzbMhFQC1pxLxM"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-RegisterUserLambdaFunctionQualifiedArn"
            }
          },
          "LoginUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginUserLambdaVersionspnLcFEnBOex7SsUnSKtKeCcAB8s1TKfG8J0wWVko"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-LoginUserLambdaFunctionQualifiedArn"
            }
          },
          "CreateQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateQuizLambdaVersionA4LbGeAyGQ56MQIyClK1Osc2AGbisolYYkQgU1tFSk"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
            }
          },
          "JwtAuthorizerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "JwtAuthorizerLambdaVersionRMOv7qQbStOHIc184BCUbyIU4nU8FncVa1beggtRtnk"
            },
            "Export": {
              "Name": "sls-quiztopia-dev-JwtAuthorizerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-quiztopia-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "registerUser": {
        "handler": "RegisterUser.registerUser",
        "events": [
          {
            "http": {
              "path": "register",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-registerUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "RegisterUserLambdaVersioncFsOipNbEtDsRGZF1IT3tFjJ6pQGpzbMhFQC1pxLxM"
      },
      "loginUser": {
        "handler": "LoginUser.loginUser",
        "events": [
          {
            "http": {
              "path": "login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-loginUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "LoginUserLambdaVersionspnLcFEnBOex7SsUnSKtKeCcAB8s1TKfG8J0wWVko"
      },
      "createQuiz": {
        "handler": "CreateQuiz.createQuiz",
        "events": [
          {
            "http": {
              "path": "quizzes",
              "method": "post",
              "authorizer": {
                "name": "jwtAuthorizer",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizerLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "quiztopia-dev-createQuiz",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "CreateQuizLambdaVersionA4LbGeAyGQ56MQIyClK1Osc2AGbisolYYkQgU1tFSk"
      },
      "jwtAuthorizer": {
        "handler": "JwtAuthorizer.jwtAuthorizer",
        "events": [],
        "name": "quiztopia-dev-jwtAuthorizer",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "JwtAuthorizerLambdaVersionRMOv7qQbStOHIc184BCUbyIU4nU8FncVa1beggtRtnk"
      }
    },
    "resources": {
      "Resources": {
        "QuizzesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "quizzes",
            "AttributeDefinitions": [
              {
                "AttributeName": "quizId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "quizId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "users",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "quiztopia",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "C:\\Users\\Pontu\\OneDrive\\Dokument\\GitHub\\examination-quiztopia\\.serverless\\quiztopia.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/quiztopia/dev/1727780717252-2024-10-01T11:05:17.252Z",
    "artifact": "quiztopia.zip"
  }
}