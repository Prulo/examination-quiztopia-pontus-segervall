{
  "C:\\Users\\Pontu\\OneDrive\\Dokument\\GitHub\\examination-quiztopia": {
    "versionSfCore": null,
    "versionFramework": "4.4.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "quiztopia",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "eu-north-1",
              "profile": "default",
              "iam": {
                "role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "environment": {
                "JWT_SECRET": "<REDACTED>",
                "DYNAMODB_TABLE_QUIZZES": "quizzes",
                "DYNAMODB_TABLE_USERS": "users"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "RegisterUserLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-registerUser"
                    }
                  },
                  "LoginUserLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-loginUser"
                    }
                  },
                  "CreateQuizLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
                    }
                  },
                  "GetAllQuizzesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzes"
                    }
                  },
                  "DeleteQuizzesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-DeleteQuizzes"
                    }
                  },
                  "GetOneQuizLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-getOneQuiz"
                    }
                  },
                  "AddQuestionToQuizLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestionToQuiz"
                    }
                  },
                  "RegisterUserLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "RegisterUser.registerUser",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-registerUser",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "RegisterUserLogGroup"
                    ]
                  },
                  "LoginUserLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "LoginUser.loginUser",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-loginUser",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "LoginUserLogGroup"
                    ]
                  },
                  "CreateQuizLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "CreateQuiz.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-createQuiz",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "CreateQuizLogGroup"
                    ]
                  },
                  "GetAllQuizzesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "GetAllQuizzes.getAllQuizzes",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-getAllQuizzes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "GetAllQuizzesLogGroup"
                    ]
                  },
                  "DeleteQuizzesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "DeleteQuizzes.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-DeleteQuizzes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "DeleteQuizzesLogGroup"
                    ]
                  },
                  "GetOneQuizLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "GetOneQuiz.getQuiz",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-getOneQuiz",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "GetOneQuizLogGroup"
                    ]
                  },
                  "AddQuestionToQuizLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                        "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                      },
                      "Handler": "Addquest.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "quiztopia-dev-addQuestionToQuiz",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE_QUIZZES": "quizzes",
                          "DYNAMODB_TABLE_USERS": "users"
                        }
                      },
                      "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
                    },
                    "DependsOn": [
                      "AddQuestionToQuizLogGroup"
                    ]
                  },
                  "RegisterUserLambdaVersiongQFxh36R9T6RKwzJMJ8JxxwQYEzH89w0ROF2A0vaz18": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RegisterUserLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "LoginUserLambdaVersionyvUjvKaEJgx2WKwL6FTySDrEpVxPtxV77A9VVvI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginUserLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "CreateQuizLambdaVersion9w2EnXWMZNSoLQq4t04eKHmQd30Q20lITJIfr9vIQ4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateQuizLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "GetAllQuizzesLambdaVersion0VObCSQaWbrYt6TV0txbRimvhH8WW4bLFZR6ZwAGU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetAllQuizzesLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "DeleteQuizzesLambdaVersionrLQPxNXYSVBkZ2MeIdqXtVe8tSz8IhMOwsZbzLCwg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteQuizzesLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "GetOneQuizLambdaVersionnKUNHUffadqOECjAPn05ORXw5z5abkP48PF2Y1BYKk": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetOneQuizLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "AddQuestionToQuizLambdaVersionEHADtg9oEIZqvtkyNbjOGu0KmgvjcxvTJk0qXw4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AddQuestionToQuizLambdaFunction"
                      },
                      "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-quiztopia",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceRegister": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "register",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "quizzes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "PathPart": "{quizId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceQuizzesQuizidVarQuestions": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "PathPart": "questions",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodRegisterPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceRegister"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RegisterUserLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RegisterUserLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginUserLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginUserLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateQuizLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateQuizLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetAllQuizzesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetAllQuizzesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteQuizzesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteQuizzesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetOneQuizLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetOneQuizLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodQuizzesQuizidVarQuestionsPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceQuizzesQuizidVarQuestions"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "AddQuestionToQuizLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AddQuestionToQuizLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1727948437382": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodRegisterPost",
                      "ApiGatewayMethodLoginPost",
                      "ApiGatewayMethodQuizzesPost",
                      "ApiGatewayMethodQuizzesGet",
                      "ApiGatewayMethodQuizzesQuizidVarDelete",
                      "ApiGatewayMethodQuizzesQuizidVarGet",
                      "ApiGatewayMethodQuizzesQuizidVarQuestionsPost"
                    ]
                  },
                  "RegisterUserLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RegisterUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginUserLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateQuizLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetAllQuizzesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetAllQuizzesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteQuizzesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteQuizzesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetOneQuizLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetOneQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AddQuestionToQuizLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AddQuestionToQuizLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "QuizzesTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "quizzes",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "quizId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "quizId",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "UsersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "users",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                    "Export": {
                      "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "RegisterUserLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RegisterUserLambdaVersiongQFxh36R9T6RKwzJMJ8JxxwQYEzH89w0ROF2A0vaz18"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-RegisterUserLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginUserLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginUserLambdaVersionyvUjvKaEJgx2WKwL6FTySDrEpVxPtxV77A9VVvI"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-LoginUserLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateQuizLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateQuizLambdaVersion9w2EnXWMZNSoLQq4t04eKHmQd30Q20lITJIfr9vIQ4"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetAllQuizzesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetAllQuizzesLambdaVersion0VObCSQaWbrYt6TV0txbRimvhH8WW4bLFZR6ZwAGU"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-GetAllQuizzesLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteQuizzesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteQuizzesLambdaVersionrLQPxNXYSVBkZ2MeIdqXtVe8tSz8IhMOwsZbzLCwg"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-DeleteQuizzesLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetOneQuizLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetOneQuizLambdaVersionnKUNHUffadqOECjAPn05ORXw5z5abkP48PF2Y1BYKk"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-GetOneQuizLambdaFunctionQualifiedArn"
                    }
                  },
                  "AddQuestionToQuizLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AddQuestionToQuizLambdaVersionEHADtg9oEIZqvtkyNbjOGu0KmgvjcxvTJk0qXw4"
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-AddQuestionToQuizLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-quiztopia-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "registerUser": {
                "handler": "RegisterUser.registerUser",
                "events": [
                  {
                    "http": {
                      "path": "register",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-registerUser",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "RegisterUserLambdaVersiongQFxh36R9T6RKwzJMJ8JxxwQYEzH89w0ROF2A0vaz18"
              },
              "loginUser": {
                "handler": "LoginUser.loginUser",
                "events": [
                  {
                    "http": {
                      "path": "login",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-loginUser",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "LoginUserLambdaVersionyvUjvKaEJgx2WKwL6FTySDrEpVxPtxV77A9VVvI"
              },
              "createQuiz": {
                "handler": "CreateQuiz.handler",
                "events": [
                  {
                    "http": {
                      "path": "quizzes",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-createQuiz",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "CreateQuizLambdaVersion9w2EnXWMZNSoLQq4t04eKHmQd30Q20lITJIfr9vIQ4"
              },
              "getAllQuizzes": {
                "handler": "GetAllQuizzes.getAllQuizzes",
                "events": [
                  {
                    "http": {
                      "path": "quizzes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-getAllQuizzes",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetAllQuizzesLambdaVersion0VObCSQaWbrYt6TV0txbRimvhH8WW4bLFZR6ZwAGU"
              },
              "DeleteQuizzes": {
                "handler": "DeleteQuizzes.handler",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-DeleteQuizzes",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "DeleteQuizzesLambdaVersionrLQPxNXYSVBkZ2MeIdqXtVe8tSz8IhMOwsZbzLCwg"
              },
              "getOneQuiz": {
                "handler": "GetOneQuiz.getQuiz",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-getOneQuiz",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetOneQuizLambdaVersionnKUNHUffadqOECjAPn05ORXw5z5abkP48PF2Y1BYKk"
              },
              "addQuestionToQuiz": {
                "handler": "Addquest.handler",
                "events": [
                  {
                    "http": {
                      "path": "quizzes/{quizId}/questions",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "quiztopia-dev-addQuestionToQuiz",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AddQuestionToQuizLambdaVersionEHADtg9oEIZqvtkyNbjOGu0KmgvjcxvTJk0qXw4"
              }
            },
            "resources": {
              "Resources": {
                "QuizzesTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "quizzes",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "quizId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "quizId",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "users",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\Pontu\\OneDrive\\Dokument\\GitHub\\examination-quiztopia",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Pontu\\OneDrive\\Dokument\\GitHub\\examination-quiztopia",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "quiztopia",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "eu-north-1",
        "profile": "default",
        "iam": {
          "role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
        },
        "environment": {
          "JWT_SECRET": "<REDACTED>",
          "DYNAMODB_TABLE_QUIZZES": "quizzes",
          "DYNAMODB_TABLE_USERS": "users"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "RegisterUserLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-registerUser"
              }
            },
            "LoginUserLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-loginUser"
              }
            },
            "CreateQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-createQuiz"
              }
            },
            "GetAllQuizzesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-getAllQuizzes"
              }
            },
            "DeleteQuizzesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-DeleteQuizzes"
              }
            },
            "GetOneQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-getOneQuiz"
              }
            },
            "AddQuestionToQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-dev-addQuestionToQuiz"
              }
            },
            "RegisterUserLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "RegisterUser.registerUser",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-registerUser",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "RegisterUserLogGroup"
              ]
            },
            "LoginUserLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "LoginUser.loginUser",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-loginUser",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "LoginUserLogGroup"
              ]
            },
            "CreateQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "CreateQuiz.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-createQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "CreateQuizLogGroup"
              ]
            },
            "GetAllQuizzesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "GetAllQuizzes.getAllQuizzes",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-getAllQuizzes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "GetAllQuizzesLogGroup"
              ]
            },
            "DeleteQuizzesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "DeleteQuizzes.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-DeleteQuizzes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "DeleteQuizzesLogGroup"
              ]
            },
            "GetOneQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "GetOneQuiz.getQuiz",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-getOneQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "GetOneQuizLogGroup"
              ]
            },
            "AddQuestionToQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
                  "S3Key": "serverless/quiztopia/dev/1727948439747-2024-10-03T09:40:39.747Z/quiztopia.zip"
                },
                "Handler": "Addquest.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "quiztopia-dev-addQuestionToQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE_QUIZZES": "quizzes",
                    "DYNAMODB_TABLE_USERS": "users"
                  }
                },
                "Role": "arn:aws:iam::585768151078:role/Full-acces-lambda"
              },
              "DependsOn": [
                "AddQuestionToQuizLogGroup"
              ]
            },
            "RegisterUserLambdaVersiongQFxh36R9T6RKwzJMJ8JxxwQYEzH89w0ROF2A0vaz18": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RegisterUserLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "LoginUserLambdaVersionyvUjvKaEJgx2WKwL6FTySDrEpVxPtxV77A9VVvI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginUserLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "CreateQuizLambdaVersion9w2EnXWMZNSoLQq4t04eKHmQd30Q20lITJIfr9vIQ4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateQuizLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "GetAllQuizzesLambdaVersion0VObCSQaWbrYt6TV0txbRimvhH8WW4bLFZR6ZwAGU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetAllQuizzesLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "DeleteQuizzesLambdaVersionrLQPxNXYSVBkZ2MeIdqXtVe8tSz8IhMOwsZbzLCwg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteQuizzesLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "GetOneQuizLambdaVersionnKUNHUffadqOECjAPn05ORXw5z5abkP48PF2Y1BYKk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetOneQuizLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "AddQuestionToQuizLambdaVersionEHADtg9oEIZqvtkyNbjOGu0KmgvjcxvTJk0qXw4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AddQuestionToQuizLambdaFunction"
                },
                "CodeSha256": "NMWz72F5HOfI7tHkiiFrsaL1xn2/8hipUG0TvyGjRuc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-quiztopia",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceRegister": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "register",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceLogin": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "login",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "quizzes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesQuizidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "PathPart": "{quizId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceQuizzesQuizidVarQuestions": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "PathPart": "questions",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodRegisterPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceRegister"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RegisterUserLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RegisterUserLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodLoginPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginUserLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginUserLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateQuizLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateQuizLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetAllQuizzesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetAllQuizzesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteQuizzesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteQuizzesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetOneQuizLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetOneQuizLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodQuizzesQuizidVarQuestionsPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuizzesQuizidVarQuestions"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "AddQuestionToQuizLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AddQuestionToQuizLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1727948437382": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodRegisterPost",
                "ApiGatewayMethodLoginPost",
                "ApiGatewayMethodQuizzesPost",
                "ApiGatewayMethodQuizzesGet",
                "ApiGatewayMethodQuizzesQuizidVarDelete",
                "ApiGatewayMethodQuizzesQuizidVarGet",
                "ApiGatewayMethodQuizzesQuizidVarQuestionsPost"
              ]
            },
            "RegisterUserLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RegisterUserLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginUserLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginUserLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateQuizLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetAllQuizzesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetAllQuizzesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteQuizzesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteQuizzesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetOneQuizLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetOneQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AddQuestionToQuizLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AddQuestionToQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "QuizzesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "quizzes",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "quizId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "quizId",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "UsersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "users",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
              "Export": {
                "Name": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
              }
            },
            "RegisterUserLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RegisterUserLambdaVersiongQFxh36R9T6RKwzJMJ8JxxwQYEzH89w0ROF2A0vaz18"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-RegisterUserLambdaFunctionQualifiedArn"
              }
            },
            "LoginUserLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginUserLambdaVersionyvUjvKaEJgx2WKwL6FTySDrEpVxPtxV77A9VVvI"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-LoginUserLambdaFunctionQualifiedArn"
              }
            },
            "CreateQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateQuizLambdaVersion9w2EnXWMZNSoLQq4t04eKHmQd30Q20lITJIfr9vIQ4"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
              }
            },
            "GetAllQuizzesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetAllQuizzesLambdaVersion0VObCSQaWbrYt6TV0txbRimvhH8WW4bLFZR6ZwAGU"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-GetAllQuizzesLambdaFunctionQualifiedArn"
              }
            },
            "DeleteQuizzesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteQuizzesLambdaVersionrLQPxNXYSVBkZ2MeIdqXtVe8tSz8IhMOwsZbzLCwg"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-DeleteQuizzesLambdaFunctionQualifiedArn"
              }
            },
            "GetOneQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetOneQuizLambdaVersionnKUNHUffadqOECjAPn05ORXw5z5abkP48PF2Y1BYKk"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-GetOneQuizLambdaFunctionQualifiedArn"
              }
            },
            "AddQuestionToQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AddQuestionToQuizLambdaVersionEHADtg9oEIZqvtkyNbjOGu0KmgvjcxvTJk0qXw4"
              },
              "Export": {
                "Name": "sls-quiztopia-dev-AddQuestionToQuizLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-quiztopia-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "registerUser": {
          "handler": "RegisterUser.registerUser",
          "events": [
            {
              "http": {
                "path": "register",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-registerUser",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "RegisterUserLambdaVersiongQFxh36R9T6RKwzJMJ8JxxwQYEzH89w0ROF2A0vaz18"
        },
        "loginUser": {
          "handler": "LoginUser.loginUser",
          "events": [
            {
              "http": {
                "path": "login",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-loginUser",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "LoginUserLambdaVersionyvUjvKaEJgx2WKwL6FTySDrEpVxPtxV77A9VVvI"
        },
        "createQuiz": {
          "handler": "CreateQuiz.handler",
          "events": [
            {
              "http": {
                "path": "quizzes",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-createQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateQuizLambdaVersion9w2EnXWMZNSoLQq4t04eKHmQd30Q20lITJIfr9vIQ4"
        },
        "getAllQuizzes": {
          "handler": "GetAllQuizzes.getAllQuizzes",
          "events": [
            {
              "http": {
                "path": "quizzes",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-getAllQuizzes",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetAllQuizzesLambdaVersion0VObCSQaWbrYt6TV0txbRimvhH8WW4bLFZR6ZwAGU"
        },
        "DeleteQuizzes": {
          "handler": "DeleteQuizzes.handler",
          "events": [
            {
              "http": {
                "path": "quizzes/{quizId}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-DeleteQuizzes",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteQuizzesLambdaVersionrLQPxNXYSVBkZ2MeIdqXtVe8tSz8IhMOwsZbzLCwg"
        },
        "getOneQuiz": {
          "handler": "GetOneQuiz.getQuiz",
          "events": [
            {
              "http": {
                "path": "quizzes/{quizId}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-getOneQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetOneQuizLambdaVersionnKUNHUffadqOECjAPn05ORXw5z5abkP48PF2Y1BYKk"
        },
        "addQuestionToQuiz": {
          "handler": "Addquest.handler",
          "events": [
            {
              "http": {
                "path": "quizzes/{quizId}/questions",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "quiztopia-dev-addQuestionToQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AddQuestionToQuizLambdaVersionEHADtg9oEIZqvtkyNbjOGu0KmgvjcxvTJk0qXw4"
        }
      },
      "resources": {
        "Resources": {
          "QuizzesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "quizzes",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "users",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "service: quiztopia\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: eu-north-1\r\n  profile: default\r\n  iam:\r\n    role: arn:aws:iam::585768151078:role/Full-acces-lambda\r\n  environment:\r\n    JWT_SECRET: \"dog\"\r\n    DYNAMODB_TABLE_QUIZZES: quizzes\r\n    DYNAMODB_TABLE_USERS: users\r\n\r\nfunctions:\r\n  registerUser:\r\n    handler: RegisterUser.registerUser\r\n    events:\r\n      - http:\r\n          path: /register\r\n          method: post\r\n  loginUser:\r\n    handler: LoginUser.loginUser\r\n    events:\r\n      - http:\r\n          path: /login\r\n          method: post\r\n  createQuiz:\r\n    handler: CreateQuiz.handler\r\n    events:\r\n      - http:\r\n          path: /quizzes\r\n          method: post\r\n  getAllQuizzes:\r\n    handler: GetAllQuizzes.getAllQuizzes\r\n    events:\r\n      - http:\r\n          path: /quizzes\r\n          method: get\r\n  DeleteQuizzes:\r\n    handler: DeleteQuizzes.handler\r\n    events:\r\n      - http:\r\n          path: /quizzes/{quizId}\r\n          method: delete\r\n  getOneQuiz:\r\n    handler: GetOneQuiz.getQuiz\r\n    events:\r\n      - http:\r\n          path: /quizzes/{quizId}\r\n          method: get\r\n  addQuestionToQuiz:\r\n    handler: Addquest.handler\r\n    events:\r\n      - http:\r\n          path: /quizzes/{quizId}/questions\r\n          method: post\r\n\r\nresources:\r\n  Resources:\r\n    QuizzesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.DYNAMODB_TABLE_QUIZZES}\r\n        AttributeDefinitions:\r\n          - AttributeName: quizId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: quizId\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n    UsersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.DYNAMODB_TABLE_USERS}\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "0630b452a94753adf94346c1713b78f8",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "f0d8e1db-8607-45bc-a01c-9595a7d64898",
    "orgName": "prulo",
    "userId": "nsCKrjkHGhrNVzHVM3",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "prulo",
    "subscription": null,
    "userEmail": "prulo1337@gmail.com",
    "serviceProviderAwsRegion": "eu-north-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "585768151078",
    "projectType": "traditional",
    "versionSf": "4.4.4",
    "serviceProviderAwsCfStackName": "quiztopia-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-north-1:585768151078:stack/quiztopia-dev/51386870-7f05-11ef-9c25-0e607f4c8e55",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:585768151078:stack/quiztopia-dev/51386870-7f05-11ef-9c25-0e607f4c8e55",
    "serviceProviderAwsCfStackCreated": "2024-09-30T08:23:49.061Z",
    "serviceProviderAwsCfStackUpdated": "2024-10-03T09:40:38.563Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "RegisterUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-registerUser:48",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-RegisterUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetOneQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-getOneQuiz:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-GetOneQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllQuizzesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-getAllQuizzes:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-GetAllQuizzesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-createQuiz:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-CreateQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AddQuestionToQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-addQuestionToQuiz:31",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-AddQuestionToQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-loginUser:48",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-LoginUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://bgr3tsejud.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-quiztopia-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-46eba553-8d2c",
        "ExportName": "sls-quiztopia-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "DeleteQuizzesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:585768151078:function:quiztopia-dev-DeleteQuizzes:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-dev-DeleteQuizzesLambdaFunctionQualifiedArn"
      }
    ]
  }
}